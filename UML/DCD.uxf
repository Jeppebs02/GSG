<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1925</x>
      <y>0</y>
      <w>252</w>
      <h>364</h>
    </coordinates>
    <panel_attributes>gui::SchedulingApp
--
-frame: JFrame
-calendarTable: JTable
-yearSelector: JComboBox&lt;Integer&gt;
-monthSelector: JComboBox&lt;String&gt;
-currentDate: LocalDate
-taskMap: HashMap&lt;LocalDate, List&lt;String&gt;&gt;
-calendarDates: LocalDate[][]
-tasks: List&lt;Task&gt;
-hoveredRow = -1: int
-hoveredCol = -1: int
-cellPopup: JPopupMenu
-createTaskItem: JMenuItem
-showTasksItem: JMenuItem
--
+ &lt;&lt;create&gt;&gt; SchedulingApp()
+main(String[] args): void
-initialize(): void
-isValidDateCell(int row, int col): boolean
-setupCellPopup(): void
-showCellPopup(MouseEvent evt, int row, int col): void
-updateCalendarView(): void
-renderMonthView(LocalDate date): void
-handleCalendarClick(int row, int col): void
-openAddTaskDialog(LocalDate date): void
-showAllTasksForDate(LocalDate date): void
-getYearRange(): Integer[]
-getMonths(): String[]
-getMonthIndex(String monthName): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1316</x>
      <y>1491</y>
      <w>273</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>dal::DBConnection
--
-connection = null: Connection
-dBConnection = new DBConnection(): DBConnection
-DBNAME = "DMA-CSD-V24_10519150": String
-SERVERNAME = "hildur.ucn.dk": String
-PORTNUMBER = "1433": String
-USERNAME = "DMA-CSD-V24_10519150": String
-PASSWORD = "Password1!": String
--
-DBConnection(): ctor
+getInstance(): DBConnection
+getConnection(): Connection
+executeSqlInsertWithIdentity(String sql): int
+startTransaction(): void
+commitTransaction(): void
-comTra(): void
+rollbackTransaction(): void
-rolTra(): void
+executeSqlInsertWithIdentityPS(PreparedStatement ps): int
+getResultSetWithPS(PreparedStatement ps): ResultSet

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>364</x>
      <y>833</y>
      <w>567</w>
      <h>196</h>
    </coordinates>
    <panel_attributes>dal::ShiftDB
--
-connection: Connection
-insert_shift_with_employee = "INSERT INTO [Shift] (StartTime, EndTime, Employee_ID, Task_ID) VALUES (?, ?, ?, ?);": String
-insert_shift_without_employee = "INSERT INTO [Shift] (StartTime, EndTime, Task_ID) VALUES(?, ?, ?)": String
-find_shifts_from_task_id = "SELECT StartTime, EndTime, Employee_ID, Task_ID FROM [Shift] WHERE Task_ID =?;": String
-insertShiftWithEmployee: PreparedStatement
-insertShiftWithoutEmployee: PreparedStatement
-findShiftsFromTaskID: PreparedStatement
--
+ &lt;&lt;create&gt;&gt; ShiftDB()
+saveShiftWithEmployee(Shift shift, int taskID): Shift
+saveShiftWithoutEmployee(Shift shift, int taskID): Shift
+saveShift(Shift shift, int taskID): Shift
+findAllShiftsByTaskIDFromDB(int taskID): List&lt;Shift&gt;
+createShiftFromResultSet(ResultSet rs): Shift

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1435</x>
      <y>595</y>
      <w>742</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>ctrl::TaskCtrl
--
-currentTask: Task
-sc = new ShiftCtrl(): ShiftCtrl
-tb: TaskDB
--
+ &lt;&lt;create&gt;&gt; TaskCtrl()
+createTask(LocalDate date, String description, String location, int userID): Task
+addShift(LocalDateTime startTime, LocalDateTime expectedEndTime): Shift
+addEmployeeToShift(int userID): void
+saveTask(): void
+createReport(int rejectionsAge, int rejectionsAttitude, int rejectionsAlternative, String alternativeRemarks, String employeeSignature, String customerSignature): Report
+getCurrentTask(): Task
+findAllTasks(int year, String month): List&lt;Task&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1036</x>
      <y>833</y>
      <w>770</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>dal::TaskDB
--
-connection: Connection
-insert_task = "INSERT INTO [Task] (Description, Location, Approval, Date, User_ID) VALUES (?, ?, ?, ?, ?);": String
-find_all_tasks_per_month = "SELECT ID AS Task_ID, Description, Location, Approval, Date, User_ID FROM [Task] WHERE YEAR(Date) = ? AND MONTH(Date) = ?;": String
-insertTask: PreparedStatement
-findAllTasks: PreparedStatement
-dbConnection: DBConnection
--
+ &lt;&lt;create&gt;&gt; TaskDB()
+saveTask(Task task): Task
+findAllTasksFromDB(int year, String month): List&lt;Task&gt;
+createTaskFromResultSet(ResultSet rs): Task
+getMonthInt(String month): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1386</x>
      <y>126</y>
      <w>378</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>gui::AddTaskDialog
--
-txtDescription: JTextField
-txtLocation: JTextField
-txtUser: JTextField
-txtReport: JTextField
-txtDate: JTextField
-shiftsTable: JTable
-shifts: List&lt;String&gt;
-tc: TaskCtrl
--
+ &lt;&lt;create&gt;&gt; AddTaskDialog(LocalDate date, HashMap&lt;LocalDate, List&lt;String&gt;&gt; taskMap)
-addShiftDialog(LocalDate date): void
-saveTask(LocalDate date, HashMap&lt;LocalDate, List&lt;String&gt;&gt; taskMap): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3542</x>
      <y>833</y>
      <w>637</w>
      <h>203</h>
    </coordinates>
    <panel_attributes>dal::EmployeeDB
--
-dbConnection = DBConnection.getInstance(): DBConnection
-connection = DBConnection.getInstance().getConnection(): Connection
-find_employee_id_by_user_id = "SELECT User_ID,Employee_ID from EmployeeUser  WHERE User_ID = ?;": String
-find_employee_info_from_user_id_and_employee_id = "SELECT Employee.ID AS EmployeeID, Employee.CPR, Employee.SecurityClearance,
 Employee.AccountNr, Employee.Certification, Employee.RegistrationNr, Employee.Department, [User].ID AS UserID,
 [User].UserName, [User].Password, [User].FirstName, [User].LastName, [User].Email, [User].PhoneNr, [User].Type, [User].Address_ID,
 [User].AccountPrivileges FROM Employee CROSS JOIN [User] WHERE Employee.ID = ? AND [User].ID = ?;": String
-findEmployeeIDByUserID: PreparedStatement
-findEmployeeInfoFromUserIDAndEmployeeID: PreparedStatement
--
+ &lt;&lt;create&gt;&gt; EmployeeDB():
+findEmployeeByUserID(int userID): Employee
+createEmployeeFromResultSet(ResultSet rs): Employee
+findEmployeeIDFromUserID(int userID): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>938</x>
      <y>147</y>
      <w>315</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>gui::AddShiftDialog
--
-txtStartTime: JTextField
-txtEndTime: JTextField
-txtEmployee: JTextField
-shiftsTable: JTable
-tc: TaskCtrl
--
+ &lt;&lt;create&gt;&gt; AddShiftDialog(JTable shiftsTable, LocalDate date, TaskCtrl tc)
-saveShift(LocalDate date): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>231</x>
      <y>595</y>
      <w>322</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>ctrl::ShiftCtrl
--
-currentShift: Shift
--
+ &lt;&lt;create&gt;&gt; ShiftCtrl()
+createShift(LocalDateTime startTime, LocalDateTime endTime): Shift
+addEmployeeToShift(Employee employee): void
+saveShift(int taskID): void
+getCurrentShift(): Shift

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2331</x>
      <y>833</y>
      <w>553</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>dal::UserDB
--
-dbConnection = DBConnection.getInstance(): DBConnection
-connection = DBConnection.getInstance().getConnection(): Connection
-find_customer_info_by_user_id = "SELECT * FROM [User] WHERE ID = ? AND Type IN ('CUSTOMER', 'GUEST');": String
~findCustomerInfoByUserId: PreparedStatement
--
+findCustomerByUserID(int userID): User
+createUserFromResultSet(ResultSet rs): User
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3066</x>
      <y>630</y>
      <w>217</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>ctrl::UserCtrl
--
--
+findCustomerByUserID(int userID): User
+findEmployeeByUserID(int userID): Employee

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1855</x>
      <y>833</y>
      <w>413</w>
      <h>343</h>
    </coordinates>
    <panel_attributes>model::Task
--
-description: String
-location: String
-approval: boolean
-date: LocalDate
-shifts: List&lt;Shift&gt;
-report: Report
-user: User
-taskID: int
--
+ &lt;&lt;create&gt;&gt; Task(String description, String location, LocalDate date, Report report, User user) 
+ &lt;&lt;create&gt;&gt; Task(LocalDate date, String description, String location, User userID)
+getDescription(): String
+setDescription(String description): void
+getLocation(): String
+setLocation(String location): void
+isApproval(): boolean
+setApproval(boolean approval): void
+getDate(): LocalDate
+setDate(LocalDate date): void
+addShift(Shift shift): void
+getShifts(): List&lt;Shift&gt;
+setTaskID(int taskID): void
+getTaskID(): int
+getReport(): Report
+setReport(Report report): void
+getUser(): User
+setUser(User user): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2996</x>
      <y>1295</y>
      <w>357</w>
      <h>406</h>
    </coordinates>
    <panel_attributes>model::Employee
--
-employeeID: int
-cpr: String
-securityClearance: String
-certification: String
-accountNr: String
-registrationNr: String
-department: String
-unavailabilities: List&lt;Availability&gt;
--
+ &lt;&lt;create&gt;&gt; Employee(String userName, String passWord, String firstName,
 String lastName, String email, String phoneNr, String address,
 AccountPrivileges accountPrivileges, int employeeID, String cpr,
 String securityClearance, String certification, String accountNr,
 String registrationNr, String department): 
+ &lt;&lt;create&gt;&gt; Employee(String userName, String passWord, String firstName,
 String lastName, String email, String phoneNr, String address,
 AccountPrivileges accountPrivileges, String cpr,
 String securityClearance, String certification, String accountNr,
 String registrationNr, String department): 
+getCpr(): String
+setCpr(String cpr): void
+getSecurityClearance(): String
+setSecurityClearance(String securityClearance): void
+getCertification(): String
+setCertification(String certification): void
+getAccountNr(): String
+setAccountNr(String accountNr): void
+getRegistrationNr(): String
+setRegistrationNr(String registrationNr): void
+getDepartment(): String
+setDepartment(String department): void
+getEmployeeID(): int
+setEmployeeID(int employeeID): void
+getUnavailabilities(): List&lt;Availability&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>28</x>
      <y>840</y>
      <w>301</w>
      <h>189</h>
    </coordinates>
    <panel_attributes>model::Shift
--
-startTime: LocalDateTime
-endTime: LocalDateTime
-employee: Employee
-shiftID: int
--
+ &lt;&lt;create&gt;&gt; Shift(LocalDateTime startTime, LocalDateTime endTime)
+getStartTime(): LocalDateTime
+setStartTime(LocalDateTime startTime): void
+getEndTime(): LocalDateTime
+setEndTime(LocalDateTime endTime): void
+getEmployee(): Employee
+setEmployee(Employee employee): void
+getShiftID(): int
+setShiftID(int shiftID): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1757</x>
      <y>189</y>
      <w>182</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;240.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1246</x>
      <y>182</y>
      <w>154</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;200.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1078</x>
      <y>266</y>
      <w>448</w>
      <h>343</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>620.0;470.0;620.0;290.0;290.0;290.0;290.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1582</x>
      <y>287</y>
      <w>168</w>
      <h>322</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>220.0;440.0;220.0;100.0;10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1841</x>
      <y>357</y>
      <w>154</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;340.0;10.0;130.0;200.0;130.0;200.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>546</x>
      <y>637</y>
      <w>903</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;1270.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2170</x>
      <y>651</y>
      <w>910</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>1280.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>602</x>
      <y>1022</y>
      <w>21</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;170.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>462</x>
      <y>700</y>
      <w>182</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>240.0;190.0;240.0;80.0;10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>217</x>
      <y>700</y>
      <w>133</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;90.0;170.0;90.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2947</x>
      <y>840</y>
      <w>469</w>
      <h>364</h>
    </coordinates>
    <panel_attributes>model::User
--
-userID: int
-userName: String
-passWord: String
-firstName: String
-lastName: String
-email: String
-phoneNr: String
-address: String
-accountPrivileges: AccountPrivileges
--
+ &lt;&lt;create&gt;&gt; User(String userName, String passWord, String firstName,
 String lastName, String email, String phoneNr, String address, AccountPrivileges accountPrivileges):
+getUserName(): String
+setUserName(String userName): void
+getPassWord(): String
+setPassWord(String passWord): void
+getFirstName(): String
+setFirstName(String firstName): void
+getLastName(): String
+setLastName(String lastName): void
+getEmail(): String
+setEmail(String email): void
+getPhoneNr(): String
+setPhoneNr(String phoneNr): void
+getAddress(): String
+setAddress(String address): void
+getAccountPrivileges(): AccountPrivileges
+setAccountPrivileges(AccountPrivileges accountPrivileges): void
+getUserID(): int
+setUserID(int userID): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1582</x>
      <y>938</y>
      <w>833</w>
      <h>658</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;920.0;1170.0;920.0;1170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1456</x>
      <y>994</y>
      <w>21</w>
      <h>511</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;710.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>805</x>
      <y>1022</y>
      <w>525</w>
      <h>574</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>730.0;800.0;10.0;800.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1582</x>
      <y>1029</y>
      <w>2058</w>
      <h>756</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;900.0;1170.0;900.0;1170.0;1060.0;2920.0;1060.0;2920.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3150</x>
      <y>1197</y>
      <w>21</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3157</x>
      <y>686</y>
      <w>21</w>
      <h>168</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3199</x>
      <y>686</y>
      <w>497</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>690.0;210.0;690.0;150.0;10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2660</x>
      <y>686</y>
      <w>448</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;210.0;10.0;120.0;620.0;120.0;620.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2037</x>
      <y>756</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1533</x>
      <y>756</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1218</x>
      <y>994</y>
      <w>21</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2583</x>
      <y>938</y>
      <w>21</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3822</x>
      <y>1029</y>
      <w>21</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1799</x>
      <y>889</y>
      <w>70</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;80.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>483</x>
      <y>1141</y>
      <w>266</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dal::ShiftDBIF
--
--
~saveShiftWithEmployee(Shift shift, int taskID): Shift
~saveShiftWithoutEmployee(Shift shift, int taskID): Shift
~saveShift(Shift shift, int taskID): Shift
~findAllShiftsByTaskIDFromDB(int taskID): List&lt;Shift&gt;
~createShiftFromResultSet(ResultSet rs): Shift

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3675</x>
      <y>1113</y>
      <w>294</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dal::EmployeeDBIF
--
--
+findEmployeeByUserID(int userID): Employee
+createEmployeeFromResultSet(ResultSet rs): Employee
+findEmployeeIDFromUserID(int userID): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1092</x>
      <y>1106</y>
      <w>287</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dal::TaskDBIF
--
--
~saveTask(Task task): Task
~findAllTasksFromDB(int year, String month): List&lt;Task&gt;
~createTaskFromResultSet(ResultSet rs): Task

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2485</x>
      <y>1029</y>
      <w>224</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dal::UserDBIF
--
--
+findCustomerByUserID(int userID): User
~createUserFromResultSet(ResultSet rs): User
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
