<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1.0">
  <zoom_level>3</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>813</x>
      <y>0</y>
      <w>108</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>gui::SchedulingApp
--
-frame: JFrame
-calendarTable: JTable
-yearSelector: JComboBox&lt;Integer&gt;
-monthSelector: JComboBox&lt;String&gt;
-currentDate: LocalDate
-taskMap: HashMap&lt;LocalDate, List&lt;String&gt;&gt;
-calendarDates: LocalDate[][]
-tasks: List&lt;Task&gt;
-hoveredRow = -1: int
-hoveredCol = -1: int
-cellPopup: JPopupMenu
-createTaskItem: JMenuItem
-showTasksItem: JMenuItem
--
+ &lt;&lt;create&gt;&gt; SchedulingApp()
+main(String[] args): void
-initialize(): void
-isValidDateCell(int row, int col): boolean
-setupCellPopup(): void
-showCellPopup(MouseEvent evt, int row, int col): void
-updateCalendarView(): void
-renderMonthView(LocalDate date): void
-handleCalendarClick(int row, int col): void
-openAddTaskDialog(LocalDate date): void
-showAllTasksForDate(LocalDate date): void
-getYearRange(): Integer[]
-getMonths(): String[]
-getMonthIndex(String monthName): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>552</x>
      <y>639</y>
      <w>117</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>dal::DBConnection
--
-connection = null: Connection
-dBConnection = new DBConnection(): DBConnection
-DBNAME = "DMA-CSD-V24_10519150": String
-SERVERNAME = "hildur.ucn.dk": String
-PORTNUMBER = "1433": String
-USERNAME = "DMA-CSD-V24_10519150": String
-PASSWORD = "Password1!": String
--
-DBConnection(): ctor
+getInstance(): DBConnection
+getConnection(): Connection
+executeSqlInsertWithIdentity(String sql): int
+startTransaction(): void
+commitTransaction(): void
-comTra(): void
+rollbackTransaction(): void
-rolTra(): void
+executeSqlInsertWithIdentityPS(PreparedStatement ps): int
+getResultSetWithPS(PreparedStatement ps): ResultSet

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>603</x>
      <y>255</y>
      <w>318</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>ctrl::TaskCtrl
--
-currentTask: Task
-sc = new ShiftCtrl(): ShiftCtrl
-tb: TaskDB
--
+ &lt;&lt;create&gt;&gt; TaskCtrl()
+createTask(LocalDate date, String description, String location, int userID): Task
+addShift(LocalDateTime startTime, LocalDateTime expectedEndTime): Shift
+addEmployeeToShift(int userID): void
+saveTask(): void
+createReport(int rejectionsAge, int rejectionsAttitude, int rejectionsAlternative, String alternativeRemarks, String employeeSignature, String customerSignature): Report
+getCurrentTask(): Task
+findAllTasks(int year, String month): List&lt;Task&gt;
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>357</y>
      <w>330</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>dal::TaskDB
--
-connection: Connection
-insert_task = "INSERT INTO [Task] (Description, Location, Approval, Date, User_ID) VALUES (?, ?, ?, ?, ?);": String
-find_all_tasks_per_month = "SELECT ID AS Task_ID, Description, Location, Approval, Date, User_ID FROM [Task] WHERE YEAR(Date) = ? AND MONTH(Date) = ?;": String
-insertTask: PreparedStatement
-findAllTasks: PreparedStatement
-dbConnection: DBConnection
--
+ &lt;&lt;create&gt;&gt; TaskDB()
+saveTask(Task task): Task
+findAllTasksFromDB(int year, String month): List&lt;Task&gt;
+createTaskFromResultSet(ResultSet rs): Task
+getMonthInt(String month): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>582</x>
      <y>54</y>
      <w>162</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>gui::AddTaskDialog
--
-txtDescription: JTextField
-txtLocation: JTextField
-txtUser: JTextField
-txtReport: JTextField
-txtDate: JTextField
-shiftsTable: JTable
-shifts: List&lt;String&gt;
-tc: TaskCtrl
--
+ &lt;&lt;create&gt;&gt; AddTaskDialog(LocalDate date, HashMap&lt;LocalDate, List&lt;String&gt;&gt; taskMap)
-addShiftDialog(LocalDate date): void
-saveTask(LocalDate date, HashMap&lt;LocalDate, List&lt;String&gt;&gt; taskMap): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1710</x>
      <y>363</y>
      <w>273</w>
      <h>87</h>
    </coordinates>
    <panel_attributes>dal::EmployeeDB
--
-dbConnection = DBConnection.getInstance(): DBConnection
-connection = DBConnection.getInstance().getConnection(): Connection
-find_employee_id_by_user_id = "SELECT User_ID,Employee_ID from EmployeeUser  WHERE User_ID = ?;": String
-find_employee_info_from_user_id_and_employee_id = "SELECT Employee.ID AS EmployeeID, Employee.CPR, Employee.SecurityClearance,
 Employee.AccountNr, Employee.Certification, Employee.RegistrationNr, Employee.Department, [User].ID AS UserID,
 [User].UserName, [User].Password, [User].FirstName, [User].LastName, [User].Email, [User].PhoneNr, [User].Type, [User].Address_ID,
 [User].AccountPrivileges FROM Employee CROSS JOIN [User] WHERE Employee.ID = ? AND [User].ID = ?;": String
-findEmployeeIDByUserID: PreparedStatement
-findEmployeeInfoFromUserIDAndEmployeeID: PreparedStatement
--
+ &lt;&lt;create&gt;&gt; EmployeeDB():
+findEmployeeByUserID(int userID): Employee
+createEmployeeFromResultSet(ResultSet rs): Employee
+findEmployeeIDFromUserID(int userID): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>390</x>
      <y>63</y>
      <w>135</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>gui::AddShiftDialog
--
-txtStartTime: JTextField
-txtEndTime: JTextField
-txtEmployee: JTextField
-shiftsTable: JTable
-tc: TaskCtrl
--
+ &lt;&lt;create&gt;&gt; AddShiftDialog(JTable shiftsTable, LocalDate date, TaskCtrl tc)
-saveShift(LocalDate date): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>87</x>
      <y>255</y>
      <w>138</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>ctrl::ShiftCtrl
--
-currentShift: Shift
--
+ &lt;&lt;create&gt;&gt; ShiftCtrl()
+createShift(LocalDateTime startTime, LocalDateTime endTime): Shift
+addEmployeeToShift(Employee employee): void
+saveShift(int taskID): void
+getCurrentShift(): Shift

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>987</x>
      <y>357</y>
      <w>237</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>dal::UserDB
--
-dbConnection = DBConnection.getInstance(): DBConnection
-connection = DBConnection.getInstance().getConnection(): Connection
-find_customer_info_by_user_id = "SELECT * FROM [User] WHERE ID = ? AND Type IN ('CUSTOMER', 'GUEST');": String
~findCustomerInfoByUserId: PreparedStatement
--
+findCustomerByUserID(int userID): User
+createUserFromResultSet(ResultSet rs): User
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1302</x>
      <y>270</y>
      <w>93</w>
      <h>27</h>
    </coordinates>
    <panel_attributes>ctrl::UserCtrl
--
--
+findCustomerByUserID(int userID): User
+findEmployeeByUserID(int userID): Employee

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>783</x>
      <y>357</y>
      <w>177</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>model::Task
--
-description: String
-location: String
-approval: boolean
-date: LocalDate
-shifts: List&lt;Shift&gt;
-report: Report
-user: User
-taskID: int
--
+ &lt;&lt;create&gt;&gt; Task(String description, String location, LocalDate date, Report report, User user) 
+ &lt;&lt;create&gt;&gt; Task(LocalDate date, String description, String location, User userID)
+getDescription(): String
+setDescription(String description): void
+getLocation(): String
+setLocation(String location): void
+isApproval(): boolean
+setApproval(boolean approval): void
+getDate(): LocalDate
+setDate(LocalDate date): void
+addShift(Shift shift): void
+getShifts(): List&lt;Shift&gt;
+setTaskID(int taskID): void
+getTaskID(): int
+getReport(): Report
+setReport(Report report): void
+getUser(): User
+setUser(User user): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1473</x>
      <y>360</y>
      <w>153</w>
      <h>174</h>
    </coordinates>
    <panel_attributes>model::Employee
--
-employeeID: int
-cpr: String
-securityClearance: String
-certification: String
-accountNr: String
-registrationNr: String
-department: String
-unavailabilities: List&lt;Availability&gt;
--
+ &lt;&lt;create&gt;&gt; Employee(String userName, String passWord, String firstName,
 String lastName, String email, String phoneNr, String address,
 AccountPrivileges accountPrivileges, int employeeID, String cpr,
 String securityClearance, String certification, String accountNr,
 String registrationNr, String department): 
+ &lt;&lt;create&gt;&gt; Employee(String userName, String passWord, String firstName,
 String lastName, String email, String phoneNr, String address,
 AccountPrivileges accountPrivileges, String cpr,
 String securityClearance, String certification, String accountNr,
 String registrationNr, String department): 
+getCpr(): String
+setCpr(String cpr): void
+getSecurityClearance(): String
+setSecurityClearance(String securityClearance): void
+getCertification(): String
+setCertification(String certification): void
+getAccountNr(): String
+setAccountNr(String accountNr): void
+getRegistrationNr(): String
+setRegistrationNr(String registrationNr): void
+getDepartment(): String
+setDepartment(String department): void
+getEmployeeID(): int
+setEmployeeID(int employeeID): void
+getUnavailabilities(): List&lt;Availability&gt;

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>357</y>
      <w>129</w>
      <h>81</h>
    </coordinates>
    <panel_attributes>model::Shift
--
-startTime: LocalDateTime
-endTime: LocalDateTime
-employee: Employee
-shiftID: int
--
+ &lt;&lt;create&gt;&gt; Shift(LocalDateTime startTime, LocalDateTime endTime)
+getStartTime(): LocalDateTime
+setStartTime(LocalDateTime startTime): void
+getEndTime(): LocalDateTime
+setEndTime(LocalDateTime endTime): void
+getEmployee(): Employee
+setEmployee(Employee employee): void
+getShiftID(): int
+setShiftID(int shiftID): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>741</x>
      <y>81</y>
      <w>78</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;240.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>78</y>
      <w>66</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;200.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>450</x>
      <y>114</y>
      <w>192</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>620.0;470.0;620.0;290.0;290.0;290.0;290.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>666</x>
      <y>123</y>
      <w>72</w>
      <h>138</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>220.0;440.0;220.0;100.0;10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>777</x>
      <y>153</y>
      <w>66</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;340.0;10.0;130.0;200.0;130.0;200.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>222</x>
      <y>273</y>
      <w>387</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;20.0;1270.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>918</x>
      <y>279</y>
      <w>390</w>
      <h>12</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>1280.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>246</x>
      <y>444</y>
      <w>9</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;150.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>186</x>
      <y>300</y>
      <w>78</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>240.0;190.0;240.0;80.0;10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>81</x>
      <y>300</y>
      <w>57</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;90.0;170.0;90.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1242</x>
      <y>360</y>
      <w>201</w>
      <h>156</h>
    </coordinates>
    <panel_attributes>model::User
--
-userID: int
-userName: String
-passWord: String
-firstName: String
-lastName: String
-email: String
-phoneNr: String
-address: String
-accountPrivileges: AccountPrivileges
--
+ &lt;&lt;create&gt;&gt; User(String userName, String passWord, String firstName,
 String lastName, String email, String phoneNr, String address, AccountPrivileges accountPrivileges):
+getUserName(): String
+setUserName(String userName): void
+getPassWord(): String
+setPassWord(String passWord): void
+getFirstName(): String
+setFirstName(String firstName): void
+getLastName(): String
+setLastName(String lastName): void
+getEmail(): String
+setEmail(String email): void
+getPhoneNr(): String
+setPhoneNr(String phoneNr): void
+getAddress(): String
+setAddress(String address): void
+getAccountPrivileges(): AccountPrivileges
+setAccountPrivileges(AccountPrivileges accountPrivileges): void
+getUserID(): int
+setUserID(int userID): void

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>666</x>
      <y>402</y>
      <w>357</w>
      <h>282</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;920.0;1170.0;920.0;1170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>426</y>
      <w>9</w>
      <h>219</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;710.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>333</x>
      <y>447</y>
      <w>225</w>
      <h>237</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>730.0;770.0;10.0;770.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>666</x>
      <y>447</y>
      <w>1086</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;880.0;3600.0;860.0;3600.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1353</x>
      <y>294</y>
      <w>210</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>680.0;220.0;680.0;130.0;10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1332</x>
      <y>294</y>
      <w>9</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;220.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1380</x>
      <y>294</y>
      <w>396</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>1300.0;230.0;1300.0;70.0;10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1128</x>
      <y>294</y>
      <w>192</w>
      <h>69</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;210.0;10.0;120.0;620.0;120.0;620.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>861</x>
      <y>324</y>
      <w>9</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>645</x>
      <y>324</y>
      <w>9</w>
      <h>39</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>510</x>
      <y>426</y>
      <w>9</w>
      <h>54</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1095</x>
      <y>402</y>
      <w>9</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1830</x>
      <y>447</y>
      <w>9</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;120.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1767</x>
      <y>483</y>
      <w>126</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dal::EmployeeDBIF
--
--
+findEmployeeByUserID(int userID): Employee
+createEmployeeFromResultSet(ResultSet rs): Employee
+findEmployeeIDFromUserID(int userID): int

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>456</x>
      <y>474</y>
      <w>123</w>
      <h>33</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dal::TaskDBIF
--
--
~saveTask(Task task): Task
~findAllTasksFromDB(int year, String month): List&lt;Task&gt;
~createTaskFromResultSet(ResultSet rs): Task

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1053</x>
      <y>441</y>
      <w>96</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dal::UserDBIF
--
--
+findCustomerByUserID(int userID): User
~createUserFromResultSet(ResultSet rs): User
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>141</x>
      <y>357</y>
      <w>255</w>
      <h>93</h>
    </coordinates>
    <panel_attributes>dal::ShiftDB
--
-connection: Connection
-dbConnection: DBConnection
-insert_shift_with_employee = "INSERT INTO [Shift] (StartTime, EndTime, Employee_ID, Task_ID) VALUES (?, ?, ?, ?);": String
-insert_shift_without_employee = "INSERT INTO [Shift] (StartTime, EndTime, Task_ID) VALUES(?, ?, ?)": String
-find_shifts_from_task_id = "SELECT StartTime, EndTime, Employee_ID, Task_ID FROM [Shift] WHERE Task_ID =?;": String
-get_shift_from_id = "SELECT * FROM [Shift] WHERE ID=?;": String
-insertShiftWithEmployee: PreparedStatement
-insertShiftWithoutEmployee: PreparedStatement
-findShiftsFromTaskID: PreparedStatement
-getShiftFromShiftID: PreparedStatement
--
+ShiftDB(): ctor
+saveShiftWithEmployee(Shift shift, int taskID): Shift
+saveShiftWithoutEmployee(Shift shift, int taskID): Shift
+saveShift(Shift shift, int taskID): Shift
+findAllShiftsByTaskIDFromDB(int taskID): List&lt;Shift&gt;
+createShiftFromResultSet(ResultSet rs): Shift
+getShiftByID(int id): Shift
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>192</x>
      <y>489</y>
      <w>114</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
dal::ShiftDBIF
--
--
~saveShiftWithEmployee(Shift shift, int taskID): Shift
~saveShiftWithoutEmployee(Shift shift, int taskID): Shift
~saveShift(Shift shift, int taskID): Shift
~findAllShiftsByTaskIDFromDB(int taskID): List&lt;Shift&gt;
~createShiftFromResultSet(ResultSet rs): Shift
~getShiftByID(int id): Shift
--
</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
